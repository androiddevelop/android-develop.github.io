
    
         <p>Javascript中的 <code>undefined</code> 和 <code>null</code> 非常的常见，它们有什么不同呢？首先看几个简单的示例：</p>

<pre><code class="language-nohighlight">var a = undefined;
var b = null;
console.log(a == b);
console.log(a === b);
console.log(typeof(a) == typeof(b));
console.log(a + 1);
console.log(b + 1);
</code></pre>

<p>上面的5个console日志会输出什么？</p>

<h3 id="解析">解析</h3>

<p><code>undefined</code> 在javascript中表示一个没有设置值的变量， <code>null</code> 表示一个空对象引用。从表示含义上可以很清楚的区分两者， 不过两者在部分使用上有一些差异，如下表：</p>

<table>
  <thead>
    <tr>
      <th>特征</th>
      <th>undefined</th>
      <th>null</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>含义</td>
      <td>无</td>
      <td>空对象</td>
    </tr>
    <tr>
      <td>表示数据</td>
      <td>NaN</td>
      <td>0</td>
    </tr>
    <tr>
      <td>类型</td>
      <td>undefined</td>
      <td>object</td>
    </tr>
  </tbody>
</table>

<p>以上几个示例:</p>

<pre><code class="language-nohighlight">var a = undefined;
var b = null;
console.log(a == b);   // true
console.log(a === b);   // false
console.log(typeof(a) == typeof(b));   // false
console.log(a + 1);    // NaN
console.log(b + 1);  // 1
</code></pre>

<p>针对这两个的经典场景，在阮一峰老师的文章<a href="http://www.ruanyifeng.com/blog/2014/03/undefined-vs-null.html">undefined与null的区别</a>中给出了说明，这里引用一下。</p>

<p><strong>null典型用法是</strong>：</p>

<pre><code class="language-nohighlight">（1） 作为函数的参数，表示该函数的参数不是对象。
（2） 作为对象原型链的终点。
</code></pre>

<p><strong>undefined典型用法是</strong>：</p>

<pre><code class="language-nohighlight">（1）变量被声明了，但没有赋值时，就等于undefined。
（2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。
（3）对象没有赋值的属性，该属性的值为undefined。
（4）函数没有返回值时，默认返回undefined。
</code></pre>

<h3 id="小结">小结</h3>

<p><code>undefined</code> 和 <code>null</code> 在javascript中的含义相近，存在差异， <code>undefined</code> 的场景更多一些。</p>

<blockquote>
  <p>如有任何知识产权、版权问题或理论错误，还请指正。</p>

  <p>转载请注明原作者及以上信息。</p>
</blockquote>

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

